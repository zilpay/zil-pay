
/*
    Text shortening
  Adding an ellipsis to text is not simple. But when you have this great mixin, it’s quite simple,
  and it can come in handy when you’re working with a lot of text, especially on small screen resolutions.
  
  @example:
    @include text-shorten(3);
*/
@mixin text-shorten() {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

/**
  Fluid typography
  We use this mixin for responsive typography because we can avoid unnecessary media queries.
  It saves you a lot of time and minifies your CSS code.
  You don’t have to worry about line-height because we’ve extended the mixin, and it automatically calculates your line-height.

  @example:
    @include fluid-font(320px, 1024px, 22px, 55px);
*/
@mixin fluid-font($min-width, $max-width, $min-font-size, $max-font-size) {
  $unit1: unit($min-width);
  $unit2: unit($max-width);
  $unit3: unit($min-font-size);
  $unit4: unit($max-font-size);
  @if $unit1 == $unit2 and $unit1 == $unit3 and $unit1 == $unit4 {
    & {
      font-size: $min-font-size;
      line-height: $min-font-size * 1.618;
      @media screen and (min-width: $min-width) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        );
        line-height: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            1.618 *
            ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        );
      }
      @media screen and (min-width: $max-width) {
        font-size: $max-font-size;
        line-height: $max-font-size * 1.618;
      }
    }
  }
}

@mixin loading-gradient($gradient-color, $bg-color) {
  cursor: progress;
  background: 
    linear-gradient(0.25turn, transparent, $gradient-color, transparent),
    linear-gradient($bg-color, $bg-color),
    radial-gradient(38px circle at 19px 19px, var(--card-color) 50%, transparent 51%),
    linear-gradient($bg-color, $bg-color);  
  background-repeat: no-repeat;
  background-size: 315px 100%, 515px 580px, 500px 500px, 537px 24px;
  background-position: -315px 0, 0 0, 0px 190px, 50px 195px; 
  animation: loading 1s infinite;
}

/*
    Flexbox Toolkit
  You should use this mixin if you are using flexbox way too much.
  If you have a problem knowing which one represents the main axis and which one the cross axis,
  this is a perfect mixin for you. It is pretty simple to use because the names are self-descriptive.
*/
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center-top-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
}
 
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
 
@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-left-column {
  display: flex;
  align-items: left;
  flex-direction: column;
}

@mixin flex-between-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
 
@mixin flex-center-vert {
  display: flex;
  align-items: center;
}
 
@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

@mixin flex-left-horiz {
  display: flex;
  justify-content: left;
}

@mixin flex-right-horiz {
  display: flex;
  justify-content: right;
}


@mixin border-radius($radius) {
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

@mixin box-sizing($box-model) {
  -moz-box-sizing: $box-model; // Firefox <= 19
      box-sizing: $box-model;
}
